                            |     # Initialize j = 3 and k = 2
0x000: 30f30300000000000000 |     irmovq $3, %rbx      # j in %rbx
0x00a: 30f10200000000000000 |     irmovq $2, %rcx      # k in %rcx
                            | 
                            |     # Initialize i = 0
0x014: 30f00000000000000000 |     irmovq $0, %rax      # i in %rax
                            | 
0x01e:                      | loop:
                            |     # Check if i < 5
0x01e: 30f80500000000000000 |     irmovq $5, %r8
0x028: 6180                 |     subq %r8, %rax       # Compare i with 5
0x02a: 765000000000000000   |     jg done             # If i >= 5, exit loop
                            | 
                            |     # j = i * 2
0x033: 2002                 |     rrmovq %rax, %rdx    # Copy i to %rdx
0x035: 6022                 |     addq %rdx, %rdx      # %rdx = i * 2 (j)
                            | 
                            |     # k = j + 1
0x037: 30f90100000000000000 |     irmovq $1, %r9       # Load 1 into %r9
0x041: 6029                 |     addq %rdx, %r9       # %r9 = j + 1 (k)
0x043: 2091                 |     rrmovq %r9, %rcx     # Store the result in %rcx (k)
                            | 
                            |     # Increment i (i++)
                            | 
                            |     # Repeat the loop
0x047: 701e00000000000000   |     jmp loop
                            | 
0x050:                      | done:
0x050: 00                   |     halt                 # End of program
